/// <reference path="jquery-1.4.4-vsdoc.js" />

/*
* This file contains javascript code that is commonly used by pages on this
* site and not specificly related to one page or functionality.
*/


// Constants
var siteDomain = "cngclientsystem.local";
var ajaxUrl_languageSwitch = "/Home/SetLanguage";


var initPlaceholder = function () {
    /// <summary>Implements support for html5 input placeholder attribute</summary>
    $("input").each(function () {
        // Only continue if placeholder attribute is not supported by this browser
        if (!(this.placeholder && 'placeholder' in document.createElement(this.tagName))) {
            // Create label element as substitute for the placeholder
            var that = this;
            var label = $("<label for=\"" + this.id + "\" class=\"placeholder\">" + $(this).attr("placeholder") + "</label>");

            // Create CSS for placeholder label
            var labelPadding = 6;
            var width = $(this).outerWidth() - labelPadding * 2;
            var height = $(this).outerHeight() - labelPadding * 2;
            var left = $(this).position().left + parseInt($(this).css("margin-left"));
            var top = $(this).position().top + parseInt($(this).css("margin-top"));
            var display = (!$(this).val()) ? "" : "none";
            var labelCss = { "width": width, "height": height, "left": left, "top": top, "display": display, "position": "absolute", "cursor": "text", "padding": labelPadding };

            // Bind events to label and input field
            $(label).click(function () { $(this).hide(); });
            $(label).select(function () { $(this).hide(); });
            $(this).focus(function () { $("label[for=" + that.id + "]").hide(); });
            $(this).blur(function () { if (!$(this).val()) $("label[for=" + that.id + "]").show(); });

            // Add the label element to the form
            $(this).parent().append(label.css(labelCss));
        }
    });
};


var initNotificationsToggle = function () {
    /// <summary>Implements hide/show link for the notifications section. Setting is stored in a cookie</summary>
    if ($("footer a.toggleNotifications").length > 0) {
        // Hide the notifications if cookie setting was set to hide
        var cname = "notificationsToggle";
        var cookie = $.cookie(cname);
        var showCaption = "[show notifications]";
        var hideCaption = "[hide notifications]";

        if (cookie != null && cookie == "hide") {
            $("section#notifications").hide();
            $("footer a.toggleNotifications").text(showCaption);
        }

        $("footer a.toggleNotifications").click(function () {
            if ($(this).text() == showCaption) {
                $("section#notifications").show();
                $(this).text(hideCaption);
                $.cookie(cname, null, { path: "/", domain: siteDomain });
            }
            else {
                $("section#notifications").hide();
                $(this).text(showCaption);
                $.cookie(cname, "hide", { path: "/", domain: siteDomain });
            }
        });
    }
};


var initStackTraceToggle = function () {
    /// <summary>Bind click event to "show stacktrace" links that are generated by SessionErrors.cshtml</summary>
    $("ul#sessionErrors a.stacktrace").click(function () {
        $(this).parent().find("pre.stacktrace").toggle();

        var caption = $(this).text() == "[show stacktrace]" ? "[hide stacktrace]" : "[show stacktrace]";
        $(this).text(caption);
    });
};


var initLanguageSwitch = function () {
    /// <summary>Bind click events to language links (flags) and implement language switch functionality</summary>
    $("nav#language a").click(function () {
        $("nav#language a").removeClass("active");
        var lang = $(this).attr("class");

        // Call ajax method that handles the language switch server-side and updates our language cookie.
        // Reload the page after the request has been executed.
        $.post(ajaxUrl_languageSwitch, { language: lang }, function (data) {
            location.reload();
        });
    });
};


var initFormValidation = function () {
    /// <summary>Bind form validation to submit event for all forms</summary>
    $("form").submit(function (e) {
        if (!$(this).valid()) {
            e.preventDefault();
        }
    });
}


/* Execute all initialization functions on document.ready */
$(document).ready(function () {
    initStackTraceToggle();
    initLanguageSwitch();
    initNotificationsToggle();
    initPlaceholder();
    initFormValidation();
});